Material and methods Construction of a fungal proteome database In this study we aim to identify co-evolutionary linked genes in ascomycetes. As the basis for the detection of co-evolution is a suitable database [42], we compiled an empirically optimized database consisting of 134 fungal proteomes from mainly ascomycetes and from two basidiomycetes for this method (Table 1). The two basidiomycete proteomes were included for the off chance of analysing gene clusters that do not originate from ascomycetes. The database covers the complete ascomycetes phylum and was iteratively tested and optimized for the detection of co-evolution in ascomycetes. The sequences were downloaded from the National Center for Biotechnology Information (NCBI) database and the Joint Genome Institute (JGI) [44]. A short identifier, unique in the database for each proteome, was introduced to enable multiple pairwise tree comparisons by the treeKO application [45]. A custom Perl script was used for removing duplicated entries in the database. The database is deposited in the GitHub repository https://github.com/gvignolle/FunOrder (doi:10.5281/zenodo.5118984). Fungal proteomes included in the empirically optimized database. Organism Source Database Identifier Reference. Acremonium chrysogenum JGI AcCh [46]. Alternaria alternata NCBI AlAl [47]. Alternaria arborescens NCBI AlAr [48]. Alternaria gaisen NCBI AlGa [49]. Alternaria sp. MG1 NCBI AlSp [50]. Alternaria tenuissima NCBI AlTe [49]. Amanita muscaria NCBI AmMu [51]. Amorphotheca resinae JGI AmRe [52]. Arthrobotrys oligospora JGI ArOl [53]. Arthroderma benhamiae JGI ArBe [54]. Ascobolus immersus JGI AsIm [55]. Aspergillus costaricaensis NCBI AsCo [56]. Aspergillus fijiensis NCBI AsFi [56]. Aspergillus flavus NCBI AsFl [57]. Aspergillus fumigatus NCBI AsFu [58]. Aspergillus homomorphus NCBI AsHo [56]. Aspergillus ibericus NCBI AsIb [56]. Aspergillus japonicus NCBI AsJa [56]. Aspergillus niger NCBI AsNi [59]. Aspergillus oryzae NCBI AsOr [60]. Aspergillus phoenicis NCBI AsPh [61]. Aspergillus terreus NCBI AsTe [62]. Blumeria graminis JGI BlGr [63]. Botryosphaeria dothidea JGI BoDo [64]. Botrytis cinerea NCBI BoCi [65]. Botrytis elliptica NCBI BoEl [66]. Botrytis galanthina NCBI BoGa [66]. Botrytis hyacinthi NCBI BoHy [66]. Botrytis paeoniae NCBI BoPa [66]. Botrytis porri NCBI BoPo [66]. Botrytis tulipae NCBI BoTu [66]. Cadophora sp. JGI CaSp [67]. Capronia semiimmersa JGI CaSe [68]. Chaetomium globosum JGI ChGl [69]. Choiromyces venosus JGI ChVe [55]. Cladonia grayi JGI ClGr [70]. Cladophialophora bantiana JGI ClBa [68]. Cladophialophora carrionii JGI ClCa [68]. Cladophialophora immunda JGI ClIm [68]. Cochliobolus heterostrophus JGI CoHe [71]. Cochliobolus victoriae JGI CoVi [72]. Colletotrichum nymphaeae JGI CoNy [73]. Colletotrichum orchidophilum JGI CoOr [74]. Colletotrichum salicis JGI CoSa [73]. Colletotrichum simmondsii JGI CoSi [73]. Colletotrichum tofieldiae JGI CoTo [75]. Coniosporium apollinis JGI CoAp [68]. Coniosporium apollinis CBS 100218 JGI Capo [68]. Corynespora cassiicola JGI CoCa [76]. Daldinia eschscholzii JGI DaEs [77]. Diaporthe ampelina JGI DiAm [78]. Diplodia seriata JGI DiSe [78]. Erysiphe necator JGI ErNe [79]. Eutypa lata NCBI EuLa [80]. Exophiala aquamarina JGI ExAq [68]. Exophiala dermatitidis JGI ExDe [68]. Exophiala oligosperma JGI ExOl [68]. Exophiala spinifera JGI ExSp [68]. Exophiala xenobiotica JGI ExXe [68]. Fonsecaea monophora JGI FoMo [81]. Fusarium fujikuroi NCBI FuFu [82]. Fusarium graminearum NCBI FuGr [83]. Fusarium oxysporum NCBI FuOx [84]. Fusarium proliferatum NCBI FuPr [85]. Fusarium pseudograminearum NCBI FuPs [86]. Fusarium verticillioides NCBI FuVe [83]. Gaeumannomyces graminis JGI GaGr [87]. Glonium stellatum JGI GlSt [88]. Hypoxylon sp. EC38 JGI HyEC [77]. Hypoxylon sp.CO27 JGI Hysp [77]. Magnaporthe grisea JGI MaGr [89]. Magnaporthiopsis poae JGI MaPo [87]. Meliniomyces bicolor JGI MeBi [52]. Meliniomyces variabilis JGI MeVa [52]. Metarhizium acridum NCBI MeAc [90]. Metarhizium album NCBI MeAl [91]. Metarhizium anisopliae NCBI MeAn [91]. Metarhizium brunneum NCBI MeBr [91]. Metarhizium guizhouense NCBI MeGu [91]. Metarhizium majus NCBI MeMa [91]. Metarhizium rileyi NCBI MeRi [92]. Metarhizium robertsii NCBI MeRo [90]. Monacrosporium haptotylum JGI MoHa [93]. Morchella importuna JGI MoIm [94]. [Nectria] haematococca NCBI NeHa [95]. Nectria haematococca JGI NeHa [95]. Neurospora crassa JGI NeCr2 [96]. Neurospora crassa FGSC JGI NeCr [97]. Neurospora tetrasperma JGI NeTe [98]. Oidiodendron maius JGI OiMa [51]. Ophiostoma piceae JGI OpPi [99]. Paecilomyces variotii JGI PaVa [100]. Panaeolus cyanescens NCBI PaCy [101]. Paracoccidioides brasiliensis JGI PaBr [102]. Penicillium camemberti NCBI PeCa [103]. Penicillium chrysogenum NCBI PeCh [104]. Penicillium digitatum NCBI PeDi [105]. Penicillium expansum NCBI PeEx [106]. Penicillium nalgiovense NCBI PeNa [107]. Penicillium oxalicum NCBI PeOx [108]. Penicillium roqueforti NCBI PeRo [103]. Penicillium rubens Wisconsin NCBI PeRu [109]. Penicillium vulpinum JGI PeVu [107]. Periconia macrospinosa JGI PeMa [67]. Pestalotiopsis fici NCBI PeFi [110]. Phaeoacremonium aleophilum JGI PhAl [111]. Phaeomoniella chlamydospora JGI PhCh [78]. Phialocephala scopiformis JGI PhSc [112]. Pneumocystis jirovecii JGI PnJi [113]. Pseudogymnoascus destructans JGI PsDe [114]. Pseudomassariella vexata JGI PsVe [115]. Rhizoctonia solani NCBI RhSo [116]. Saccharomyces arboricola NCBI SaAr [117]. Saccharomyces cerevisiae NCBI SaCe [118]. Terfezia boudieri JGI TeBo [55]. Tolypocladium ophioglossoides NCBI ToOp [119]. Tolypocladium paradoxum NCBI ToPa [120]. Trichoderma arundinaceum NCBI TrAr [121]. Trichoderma asperellum NCBI TrAs [122]. Trichoderma atroviride NCBI TrAt [123]. Trichoderma citrinoviride NCBI TrCi [122]. Trichoderma harzianum NCBI TrHa [124]. Trichoderma longibrachiatum NCBI TrLo [125]. Trichoderma reesei NCBI TrRe [126]. Trichoderma virens NCBI TrVi [123]. Trichophyton rubrum JGI TrRu [127]. Tuber aestivum var. urcinatum JGI TuAe [55]. Tuber magnatum JGI TuMa [55]. Venturia inaequalis JGI VeIn [128]. Verruconis gallopava JGI VeGa [68]. Verticillium dahliae JGI VeDa [129]. Xylona heveae JGI XyHe [130]. Zymoseptoria brevis JGI ZyBr [131]. Zymoseptoria pseudotritici JGI ZyPs [132]. The sequences were downloaded from the National Center for Biotechnology Information (NCBI) database or the Joint Genome Institute (JGI). The identifiers were used in the FunOrder software package. Workflow The workflow for the FunOrder method is depicted in Fig 2. First, the sequences of the BGC to be analysed are fed into the software bundle. FunOrder accepts a single file in either genbank file format or fasta format as input. The input files contain BGCs predicted by tools such as antiSMASH [29] or DeepBGC [33]. In case a genbank file is provided, a python script (Genbank to FASTA by Cedar McKay and Gabrielle Rocap, University of Washington) is called to extract the amino acid sequence of the genes in the BGC and create a fasta file. The multi-fasta file is then split into individual fasta files each containing a single protein sequence. These are placed in a subfolder created for the analysis of the BGC. Each file is named either after the position of the gene in the BGC or after the respective protein sequence description. This varies from the input file and the varying annotations used (If needed this can be changed in the script following the instructions of Genbank to FASTA by Cedar McKay and Gabrielle Rocap, University of Washington). Each header of the query sequences is tagged with the identifier "query" at the beginning of the header. The individual sequences are compared to the empirically optimized proteome database (Table 1) by a sequence similarity search using blastp 2.8.1+ (Protein-Protein BLAST) [133]. The output of this search is saved in a file with the ".tab" extension. Additionally, an optional remote search of the non-redundant National Center for Biotechnology Information (NCBI) protein database can be performed, yielding a file with the "ncbi.tab" extension. This allows a preliminary manual analysis of the input sequences and facilitates subsequent annotations of the BGCs. 10.1371/journal.pcbi.1009372.g002Fig 2Schematic representation of the workflow of FunOrder. Schematic representation of the workflow of FunOrder. Next, the top 20 results of the blastp analysis are extracted and combined with the query sequence for each gene. A custom Perl script removes potential duplicate entries based on sequence identity. Using emma, a multiple sequence alignment of these protein sequences is calculated based on the ClustalW [134] algorithm, and a dendrogram computed. Based on the multiple sequence alignment, 100 rapid Bootstraps and a subsequent search for the best-scoring maximum likelihood (ML) tree are performed using RAxML (Randomized Axelerated Maximum Likelihood) [135]. The phylogenetic trees are computed using the LG amino acid substitution model. Furthermore, a standard ascertainment bias correction by Paul O. Lewis is performed. At this stage, we have obtained a phylogenetic tree (within the context of our empirically optimized database) for each protein of the input BGC. To estimate if and to what extent the different genes within a BGC are co-evolved, the strict distance and speciation distance among the ML trees of the individual genes are calculated using the TreeKO algorithm [45]. This tool was designed for automated tree comparison and was already suggested to be used for the detection of co-evolution in protein families [45]. The tool compares the topology of different trees; a distance of 0 in both distance measures represents identical trees. In this context, a higher similarity between the different trees of the individual genes points towards a shared evolution. The strict distance is a weighted Robinson-Foulds (RF) distance measure that penalizes dissimilarities in evolutionarily important events such as gene losses and gene duplications; it has been suggested to be more significant in the detection of co-evolution than the evolutionary distance [45]. In contrast, the evolutionary or speciation distance is computed without taking evolutionary exceptions, such as duplication events or different species content of the two compared trees into account and infers shared "speciation history" based solely on topology without considering branch lengths and only considering shared species of the compared trees. Therefore, an evolutionary distance of 0 does not necessarily describe identical trees but shared "speciation history" of shared species. All pairwise strict and evolutionary distances are combined into matrices which are used as input for an R script [136–140]. In this R-script, first, the strict and evolutionary distances are summed up to a third combined distance matrix combining the information about co-evolution and shared speciation into a single measure. In our experience, this measure can be helpful to detect genes that share little co-evolution with the core-enzymes but are still essential for the biosynthesis, which is reflected in a shared speciation. The evolutionary distance is not directly part of the output of FunOrder as is not intended to be used for the detection of co-evolution. Second, the strict and the combined distance matrices are visualized as heatmaps with a dendrogram computed with the complete linkage method, to find similar clusters in these data sets. Next, the Euclidean distance within the matrices is computed and clustered using Ward’s minimum variance method aiming at finding compact spherical clusters, with the implemented squaring of the dissimilarities before cluster updating, for the two distance matrices separately, with scaled input data [141]. Lastly, a principal component analysis (PCA) is performed on the two distance matrices and the score plot of the first two principal components visualized, respectively. These outputs enable the adoption of a larger view on the distance measures and thereby allow the analysis of co-evolution within the BGC from different perspectives. We describe in a following subchapter how to interpret these visualisations. The software bundle is written in the BASH (Bourn Again Shell) environment and includes all necessary subprograms. As BASH is the default shell-language of all Linux distributions and MacOS, FunOrder can run on these two operation systems. The FunOrder software package is deposited in the GitHub repository https://github.com/gvignolle/FunOrder (doi:10.5281/zenodo.5118984). Notably, the software package includes scripts adapted to the use on servers and for the integration in various pipelines; details on these can be found in the ReadMe file on the GitHub repository. FunOrder requires some dependencies e.g., RAxML (Randomized Axelerated Maximum Likelihood) [135] and the EMBOSS (The European Molecular Biology Open Software Suite) package [142], for details and links to all dependencies please refer to the ReadMe file on the GitHub repository. Compilation of benchmark gene clusters (GCs) To test and evaluate the applicability of the FunOrder method, we used different control and test gene (or protein) sets. The sequences of all test and control sets are deposited in the GitHub repository https://github.com/gvignolle/FunOrder (doi: 10.5281/zenodo.5118984). The first set of negative control gene clusters (GCs) were 42 completely randomly generated synthetic GCs, which were created with a custom BASH script. Therein, ATGC strings of random composition and length were translated to amino acid strings using transeq from the EMBOSS package and the asterisks were removed. The second set of negative controls were 60 random GCs which were created by subsampling randomly the fungal proteome database with a Perl script from the MEME suit [143]. For each random GC a different seed number was given to guarantee non repetitive GCs, each random GC contained 3–10 randomly chosen protein sequences in a random order. These negative control GCs were subsampled from different genomes to maximize the randomness and use gene clusters that should not contain co-evolved genes. We used a set of 30 empirically well characterized BGCs from a broad range of different genera (Table 2) as positive controls. The BGC sequences were downloaded from NCBI or the MIBiG (Minimum information about a biosynthetic gene cluster) database [144]. The sequences are available at the GitHub repository https://github.com/gvignolle/FunOrder (doi:10.5281/zenodo.5118984). All BGCs were manually inspected for correctness and completeness based on the respective literature (S1 Table, references in Table 2). We further added 2 genes on each side of the BGC to mimic the greedy gain performed by antiSMASH, if possible (sequences available) and applicable (only few or no gap genes present). Next, we defined the class of each gene (biosynthetic gene, further essential gene, gap, or extra gene) according to the described function of the enzymes in the literature (S1 Table). Empirically characterized biosynthetic gene clusters used as positive controls. Product—BGC Organism MIBiG id Reference(s). 2-Pyridon-Desmethylbassianin (dmb) Beauveria bassiana BGC0001136 [145]. Aflatoxin (afl) Aspergillus flavus BGC0000008 [146,147]. Botrydial (bot) Botrytis cinera BGC0000631 [148,149]. Cephalosporin (cef) Acremonium chrysogenum BGC0000317 [150]. Compactin (mlc) Penicillium citrinum BGC0000039 [151,152]. Cyclosporin (cyc2) Beauveria felina BGC0001565 [18,153–155]. Destruxin (dtxs) Metarhizium robertsii BGC0000337 [156]. Fumagillin (fma) Aspergillus fumigatus BGC0001067 [157]. Fumitremorgin (ftm) Aspergillus fumigatus - [158–161]. Fumonisin (fum1) Fusarium oxysporum BGC0000063 [162]. Fumonisin (fum2) Fusarium verticilloides BGC0000062 [163–170]. Fusaric acid (FUB) Fusarium fujikuroi - [171]. Ilicicolin H (ili) Neonectaria sp. DH2 BGC0002035 [172]. Leporin (lep) Aspergillus flavus BGC0001445 [173]. Lovastatin (lov) Aspergillus terreus - [17,62,174]. Mycophenolic acid (mpa1) Penicillium brevicompactum BGC0000104 [175–180]. Mycophenolic acid (mpa2) Penicillium roqueforti BGC0001360 [181]. Mycophenolic acid (mpa3) Penicillium roqueforti BGC0001677 [182]. Paxillin (pax) Penicillium paxilli BGC0001082 [183]. Penicillin (pen1) Penicillium chrysogenum BGC0000404 [184]. Penicillin (pen2) Penicillium chrysogenum BGC0000405 [19]. Pestheic acid (pta) Pestalotiopsis fici BGC0000121 [185]. Pneumocandin (GL) Glaera Iozoyensis BGC0001035 [186–188]. Sorbicillinol (sor1) Penicillium rubens BGC0001404 [189,190]. Sorbicillinol (sor2) Trichoderma reesei - [191]. Tenellin (ten) Beauveria bassiana BGC0001049 [192,193]. Terrein (ter) Aspergillus terreus BGC0000161 [194]. Tetramic acid (tas) Hapsidospora irregularis - [195]. Ustiloxin B (ust) Aspergillus flavus - [196]. Xanthocillin (xan) Aspergillus fumigatus BGC0001990 [197]. Further, we compiled 10 protein sets containing the sequences of enzymes of conserved metabolic pathways from organisms that were not included in the proteome database, termed „Biosynthetic_pathways“, or „BioPath”(S2 Table; sequences deposited at the GitHub repository https://github.com/gvignolle/FunOrder (doi:10.5281/zenodo.5118984)). As we anticipate a strong co-evolution among the corresponding genes, we used these sets as positive controls for co-evolution in general. Finally, we subsampled the genomes of organisms that were not included in the proteome database for 30 random loci containing 8 to 10 genes (S3 Table; sequences available at the GitHub repository https://github.com/gvignolle/FunOrder (doi:10.5281/zenodo.5118984)). We termed this control set „sequential GCs“. This set should represent the random degree of co-evolution based only on genomic vicinity. Notably, due to the randomness of the sampling, the sequential GCs may also contain evolutionary linked genes. Calculation of MEM and determination of thresholds for co-evolution As the thresholds for the strict and/or evolutionary distance for the analysis of protein co-evolution are database dependent, we needed to define these thresholds manually. To this end, we performed a manual comparison of the phylogenetic trees of genes anticipated to be co-evolved and of not presumably co-evolved genes. As positive control datasets (anticipated co-evolution), we used the essential genes within the positive control BGCs. As negative control data set (anticipated to not have co-evolved), we used the genes in the random GCs. For the manual tree comparisons, we considered the topology (defined in S4 Table), branch lengths, number of nodes, and shared leaves of the trees and calculated the manual evaluation measure (MEM) according to the definitions in S5 Table. We calculated the MEM for each gene tree pair of the positive and the negative control data sets (S6 and S7 Tables, respectively). The measure ranges from 3 (same) to 0 (no shared leaves). The MEM values of each pair-wise tree comparison were then manually reconciled with the corresponding strict and the combined distance measures obtained from the treeKO analysis and the subsequent R script, respectively. The procedure is exemplary described for the 2-Pyridon-Desmethylbassianin (dmb) BGC from Beauveria bassiana in S1 File. Based on these manual comparisons, we defined the threshold values for strict and combined distances in the following: two genes are considered as co-evolved if the strict distance value is less than 0.7 or if the combined distance is equal to or less than 60 percent of the maximum value in the combined distance matrix of the analysed set. Calculation of the Internal co-evolutionary quotient (ICQ) The internal co-evolutionary quotient (ICQ) expresses how many genes in a GC or proteins in a protein set are co-evolved according to the previously defined threshold for strict and combined distances within the distance matrices of an analysed GC (or protein set). To calculate the ICQ, each protein is compared with every other protein. The total number of all possible pairwise comparisons is 2* [d*(d-1)] for d proteins. The ICQ was calculated using Eq 1, resulting in values between 0 and 1, with 1 representing no co-evolved genes, and 0 representing that most genes are co-evolved with each other in the insert GC. ICQ = internal co-evolutionary quotient; g = number of strict distances < 0.7 and combined distances < = (0.6 * max value of the combined distance matrix) in all matrices (visualized in the heatmaps); d = number of genes in the GC. Manual interpretation of the FunOrder output The FunOrder outputs three different visualizations (heatmap, dendrogram, PCA) each of the strict and combined distance matrices among the genes (or proteins) of an inserted GC (or protein set). These visualizations need to be interpreted manually. For the manual interpretation, we first searched for genes that clustered together with the core enzyme(s) in any of the three visualisations of the strict distance. The definition of the clusters needs to be performed carefully keeping the biological background (gene predictions) in mind. For instance, a cluster containing typical tailoring enzymes (e.g., hydrolases, P450 cytochrome oxidases, FAD-containing enzymes, etc.) and/or further essential genes (e.g., transcription factors or transporters) make sense, whereas clusters containing a lot of genes encoding for unknown genes and/or genes that are unlikely to be involved in the biosynthesis of a secondary metabolite) do not make sense. Next, clustering in the visualizations of the combined distances is considered. As the combined distance also contains information about the speciation history, it may be used to add further genes to the list of “detected genes”. Notably, this needs to be critically evaluated and decided on a case-to-case basis, taking the gene predictions into account. Please also refer to S2 File for a detailed step-by-step description of the interpretation procedure, the exemplary analysis of the lovastatin BGC from A. terreus in the results, and S3 File and S4 File for the exemplary analysis of two unknown BGCs. Performance evaluation To test the robustness of FunOrder, we analysed 42 completely randomly generated synthetic GCs. To test whether the FunOrder method can be used to detect co-evolution within GCs (or protein sets), we calculated the ICQ for different control sets and compared the results in a kernel density plot. To evaluate the performance of the FunOrder method regarding its capability to identify presumably co-evolved essential genes (as defined in S1 Table) and to distinguish them from (presumably not co-evolved) gap genes and genes outside of the BGC via the detection of co-evolution, we performed a manual interpretation of 30 empirically characterized BGCs (Table 2) as described above. Genes that clustered together with the core enzyme(s) according to the procedure described above were considered as „detected“. Then we counted the total number of (1a) detected essential genes or (1b) detected biosynthetic genes, (2a) not detected essential genes or (2b) not detected biosynthetic genes, (3) detected gap and extra genes, and (4) not detected gap or extra genes in all BGCs, and defined (1a or 1b) as true positives (TP), (2a or 2b) as false negatives (FN), (3) as false positives (FP), and (4) as true negatives (TN). The values were used for a final statistical evaluation of FunOrder as suggested by Chicco and Jurman [198].